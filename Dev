package br.com.dio.desafio;

import java.util.LinkedHashSet;
import java.util.Objects;
import java.util.Optional;
import java.util.Set; 

public class Dev {
	
	private String nome; 
	private Set<Conteudo> conteudoInseridos = new LinkedHashSet<>(); 
	private Set<Conteudo> conteudosConcluidos = new LinkedHashSet<>(); 
	
	public void incresverBootCamp(BootCamp bootCamp) {
		
		this.conteudoInseridos.addAll(bootCamp.getConteudos());
		bootCamp.getDevsInscritos().add(this);
		
		
	}
	
	public void progredir() {
		Optional<Conteudo> conteudo = this.conteudoInseridos.stream().findFirst();
		if(conteudo.isPresent()) {
			this.conteudosConcluidos.add(conteudo.get());
			this.conteudoInseridos.remove(conteudo.get()); 
		}
		else {
			System.err.println("Você não está matriculado em nenhum conteúdo");
		}
	}
	
	public void cacularTotalXp() {
		
		this.conteudosConcluidos
		.stream()
		.mapToDouble(Conteudo::calcular)
		.sum();
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public Set<Conteudo> getConteudoInseridos() {
		return conteudoInseridos;
	}

	public void setConteudoInseridos(Set<Conteudo> conteudoInseridos) {
		this.conteudoInseridos = conteudoInseridos;
	}

	public Set<Conteudo> getConteudosConcluidos() {
		return conteudosConcluidos;
	}

	public void setConteudosConcluidos(Set<Conteudo> conteudosConcluidos) {
		this.conteudosConcluidos = conteudosConcluidos;
	}

	@Override
	public int hashCode() {
		return Objects.hash(conteudoInseridos, conteudosConcluidos, nome);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Dev other = (Dev) obj;
		return Objects.equals(conteudoInseridos, other.conteudoInseridos)
				&& Objects.equals(conteudosConcluidos, other.conteudosConcluidos) && Objects.equals(nome, other.nome);
	}
	
	
}
